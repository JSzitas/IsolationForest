source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = 1,y = 2, extended_not, data)
anomaly_contour(x = "x", y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x", y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x", y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x", y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x", y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x", y = "y", extended_not, data)
anomaly_contour(x = "x", y = "y", extended_0, data)
anomaly_contour(x = "x", y = "y", extended_1, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/anomaly_plot.R')
anomaly_plot(x = "x", y = "y", extended_1, data)
anomaly_plot(x = "x", y = "y", forest = extended_1, data = data)
anomaly_plot(x = "x", y = "y", forest = extended_1, data = data, contamination = 0.1)
source('C:/Users/juraj/git_hub/IsolationForest/R/predict.R')
predict.isolationForest(res, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
source('C:/Users/juraj/git_hub/IsolationForest/R/predict.R')
source('C:/Users/juraj/git_hub/IsolationForest/R/forest.R')
test <- isolationForest(data)
predict.isolationForest(test, data)
usethis::use_readme_rmd()
usethis::use_lifecycle_badge("experimental")
usethis::use_travis()
usethis::use_appveyor()
usethis::use_cran_badge()
usethis::use_coverage()
randtoolbox::halton(1)
randtoolbox::halton(1)
randtoolbox::halton(1)
randtoolbox::halton(1)
randtoolbox::halton(1, init = FALSE)
randtoolbox::halton(1, init = FALSE)
randtoolbox::halton(1, init = FALSE)
randtoolbox::halton(1)
randtoolbox::halton(1)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
randtoolbox::halton(1, usetime = TRUE)
ceiling((randtoolbox::halton(1, usetime = TRUE) *
(max_split-min_split)) + min_split )
min_split <- 15
max_split <- 75
ceiling((randtoolbox::halton(1, usetime = TRUE) *
(max_split-min_split)) + min_split )
ceiling((randtoolbox::halton(1, usetime = TRUE) *
(max_split-min_split)) + min_split )
ceiling((randtoolbox::halton(1, usetime = TRUE) *
(max_split-min_split)) + min_split )
ceiling((randtoolbox::halton(1, usetime = TRUE) *
(max_split-min_split)) + min_split )
ceiling((randtoolbox::halton(1, usetime = TRUE) *
(max_split-min_split)) + min_split )
ceiling((randtoolbox::halton(1, usetime = TRUE) *
(max_split-min_split)) + min_split )
ceiling((randtoolbox::halton(1, usetime = TRUE) *
(max_split-min_split)) + min_split )
ceiling((randtoolbox::halton(1, usetime = TRUE) *
(max_split-min_split)) + min_split )
ceiling((randtoolbox::halton(166, usetime = TRUE) *
(max_split-min_split)) + min_split )
min(ceiling((randtoolbox::halton(166, usetime = TRUE) *
(max_split-min_split)) + min_split ))
ax(ceiling((randtoolbox::halton(166, usetime = TRUE) *
(max_split-min_split)) + min_split ))
max(ceiling((randtoolbox::halton(166, usetime = TRUE) *
(max_split-min_split)) + min_split ))
remove(min_split)
remove(max_split)
randtoolbox::halton(1, dim = 1000)
source('C:/Users/juraj/git_hub/IsolationForest/R/forest.R')
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
test <- isolationForest(data, QMC = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
test <- isolationForest(data, QMC = TRUE)
test <- isolationForest(data, QMC = TRUE, vanilla = TRUE)
test <- isolationForest(data, QMC = TRUE )
QMC_split(data, ext_level = 0)
recovery::recover(QMC_split,list(data, ext_level = 0))
recovery::recover(QMC_split,list(data, ext_level = 0), TRUE)
recovery::recover(QMC_split,list(data, ext_level = 0), FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
recovery::recover(QMC_split,list(data, ext_level = 0), FALSE)
QMC_split(data, ext_level = 0)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
QMC_split(data, ext_level = 0)
unlist(QMC_split(data, ext_level = 0))
c(QMC_split(data, ext_level = 0))
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
QMC_split(data, ext_level = 0)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
test <- isolationForest(data, QMC = TRUE )
View(test)
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, QMC = TRUE, vanilla = TRUE )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, vanilla = TRUE )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, vanilla = TRUE, Phi = 32 )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, vanilla = TRUE, Phi = 32, QMC = TRUE )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, n_trees = 1000, vanilla = TRUE, Phi = 32, QMC = TRUE )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, n_trees = 1000, vanilla = TRUE, Phi = 32)
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, n_trees = 2000, vanilla = TRUE, Phi = 32, QMC = TRUE )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, n_trees = 2000, vanilla = TRUE, Phi = 64, QMC = TRUE )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
future::plan("multiprocess")
test <- isolationForest(data, n_trees = 2000, vanilla = TRUE, Phi = 64, QMC = TRUE )
test <- isolationForest(data, n_trees = 2000, Phi = 64, QMC = TRUE )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, n_trees = 1000, Phi = 32, QMC = TRUE )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, n_trees = 1000,vanilla = TRUE, Phi = 32, QMC = TRUE )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, n_trees = 1000,extension_level = 1, Phi = 32, QMC = TRUE )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, n_trees = 10000,extension_level = 1, Phi = 32, QMC = TRUE )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
source('C:/Users/juraj/git_hub/IsolationForest/R/forest.R')
test <- isolationForest(data, n_trees = 10000,extension_level = 1, Phi = 32 )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
test <- isolationForest(data, n_trees = 10000,extension_level = 0, Phi = 32 )
anomaly_plot(x = "x", y = "y", data = data, forest = test)
source('C:/Users/juraj/git_hub/IsolationForest/R/forest.R')
which(data$x < 0)
which(data$x < 0 || data$x == NA)
which(data$x < 0 | data$x == NA)
which(data$x < 0 | data$x == NA)
which(data$x < 0 | data$x == NA)
sample(data, 60)
sample(1:nrow(data), 60)
NA_data <- data[sample(1:nrow(data), 60),1] <- NA
NA_data <- data[sample(1:nrow(data), 25),2] <- NA
NA_data
NA_data <- data
NA_data <- data[sample(1:nrow(data), 25),2] <- NA
View(data)
sum(is.na(unlist(data)))
is.na(data[,1])
is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
(runif(1) > 0.5) * is.na(unlist(data[,1]))
max(data$x)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
test <- isolationForest(data, n_trees = 1000, vanilla = TRUE, Phi = 32)
source('C:/Users/juraj/git_hub/IsolationForest/R/forest.R')
test <- isolationForest(data, n_trees = 1000, vanilla = TRUE, Phi = 32)
warnings()
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
test <- isolationForest(data, n_trees = 1000, vanilla = TRUE, Phi = 32)
warnings()
?duplicated()
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 10 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 10 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 10 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 10 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 20 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
which(data)
data
is.na(X)
is.na(data)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
test <- isolationForest(data, n_trees = 1000, vanilla = TRUE, Phi = 32)
warnings()
anomaly_plot("x","y",data = data, forest = test)
source('C:/Users/juraj/git_hub/IsolationForest/R/anomaly_plot.R')
anomaly_plot("x","y",data = data, forest = test)
data[which(data == NA)]
data[which(data == NA),]
data[,which(data == NA)]
which(data == NA)
which(data[1:500,] == NA)
which(data[1:500,1] == NA)
which(data[1:500,2] == NA)
which(unlist(data[1:500,2]) == NA)
which(unlist(data[,2]) == NA)
View(data)
unlist(data[,2]) == NA
is.na(data[,2])
is.na(data)
sample(c(-1e9,1e9),1)
sample(c(-1e9,1e9),1)
sample(c(-1e9,1e9),1)
sample(c(-1e9,1e9),1)
sample(c(-1e9,1e9),1)
sample(c(-1e9,1e9),1)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
is.na(data)
data[is.na(data)]
data[[is.na(data)]]
data[is.na(data)]
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
iTree(data, 8 , 0, FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/forest.R')
future::plan("multiprocess")
source('C:/Users/juraj/git_hub/IsolationForest/R/forest.R')
isolationForest(data, n_trees = 2000, Phi = 32, vanilla = FALSE)
test <- isolationForest(data, n_trees = 2000, Phi = 32, vanilla = FALSE)
anomaly_plot("x","y", data = data, forest = test)
anomaly_plot("x","y", data = data, forest = test, point_plot = FALSE )
source('C:/Users/juraj/git_hub/IsolationForest/R/anomaly_plot.R')
anomaly_plot("x","y", data = data, forest = test, point_plot = FALSE )
test <- isolationForest(data, n_trees = 2000, Phi = 32, vanilla = TRUE)
anomaly_plot("x","y", data = data, forest = test, point_plot = FALSE )
test <- isolationForest(data, n_trees = 2000, Phi = 32, vanilla = FALSE, extension_level = 1)
anomaly_plot("x","y", data = data, forest = test, point_plot = FALSE )
N = 1e3
x = c(rnorm(N, 0, 0.5), rnorm(N*0.05, -1.5, 1))
y = c(rnorm(N, 0, 0.5), rnorm(N*0.05,  1.5, 1))
ol = c(rep(0, N), rep(1, (0.05*N))) + 2
data = data.frame(x, y)
test <- isolationForest(data, n_trees = 2000, Phi = 32, vanilla = FALSE, extension_level = 1)
anomaly_plot("x","y", data = data, forest = test, point_plot = FALSE )
source('C:/Users/juraj/git_hub/IsolationForest/R/anomaly_plot.R')
anomaly_plot("x","y", data = data, forest = test )
test <- isolationForest(data, n_trees = 2000, Phi = 32, vanilla = FALSE, extension_level = 0)
anomaly_plot("x","y", data = data, forest = test )
anomaly_plot("x","y", data = data, forest = test, contamination = 0.1 )
anomaly_plot("x","y", data = data, forest = test, contamination = 0.15 )
anomaly_plot("x","y", data = data, forest = test, contamination = 0.1 )
data[sample(1:nrow(data),60),1] <- NA
data[sample(1:nrow(data),35),2] <- NA
test <- isolationForest(data, n_trees = 2000, Phi = 32, vanilla = FALSE, extension_level = 0)
anomaly_plot("x","y", data = data, forest = test, contamination = 0.1 )
anomaly_plot("x","y", data = data, forest = test, contour = TRUE)
test <- isolationForest(data, n_trees = 2000, Phi = 32, vanilla = FALSE, extension_level = 1)
anomaly_plot("x","y", data = data, forest = test, contour = TRUE)
as.integer(TRUE)
as.integer(FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
split(data, ext_level = 0, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
split(data, ext_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = FALSE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
iTree(data, max_tree_depth = 8, extension_level = 0, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/predict.R')
see <- isolationForest(data, n_trees = 100, Phi = 64, vanilla = TRUE)
anomaly_plot("x","y", data = data, forest = see, contour = TRUE)
see <- isolationForest(data, n_trees = 100, Phi = 32, vanilla = TRUE)
anomaly_plot("x","y", data = data, forest = see, contour = TRUE)
see <- isolationForest(data, n_trees = 1000, Phi = 32, vanilla = TRUE)
anomaly_plot("x","y", data = data, forest = see, contour = TRUE)
see <- isolationForest(data, n_trees = 2000, Phi = 32, vanilla = TRUE)
anomaly_plot("x","y", data = data, forest = see, contour = TRUE)
see <- isolationForest(data, n_trees = 2000, Phi = 32, extension_level = 1)
anomaly_plot("x","y", data = data, forest = see, contour = TRUE)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE)
future::plan("multiprocess")
see <- isolationForest(data, n_trees = 10000, Phi = 32, extension_level = 1)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE)
see <- isolationForest(data, n_trees = 2000, Phi = 64, extension_level = 1)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE)
see <- isolationForest(data, n_trees = 2000, Phi = 64, extension_level = 0)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE)
see <- isolationForest(data, n_trees = 5000, Phi = 64, extension_level = 0)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
see <- isolationForest(data, n_trees = 5000, Phi = 64, extension_level = 0)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
see <- isolationForest(data, n_trees = 5000, Phi = 64, extension_level = 0)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE)
anomaly_plot("x","y", data = data, forest = see, contour = TRUE)
see <- isolationForest(data, n_trees = 5000, Phi = 64, extension_level = 1)
anomaly_plot("x","y", data = data, forest = see, contour = TRUE)
see <- isolationForest(data, n_trees = 5000, Phi = 64, extension_level = 1, vanilla = TRUE)
anomaly_plot("x","y", data = data, forest = see, contour = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/tree_building.R')
see <- isolationForest(data, n_trees = 100, Phi = 64, extension_level = 1, vanilla = TRUE)
anomaly_plot("x","y", data = data, forest = see, contour = TRUE)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE, contamination = 0.1)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE, contamination = 0.15)
see <- isolationForest(data, n_trees = 1000, Phi = 64, extension_level = 1, vanilla = TRUE)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE, contamination = 0.1)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE, contamination = 0.15)
see <- isolationForest(data, n_trees = 10000, Phi = 64, extension_level = 1, vanilla = TRUE)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE, contamination = 0.15)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE, contamination = 0.1)
anomaly_plot("x","y", data = data, forest = see, contour = FALSE, contamination = 0.15)
anomaly_plot("x","y", data = data, forest = see, contour = TRUE)
future::plan()
future::plan()[[1]]
as.character(future::plan())
future::plan()
see_future <- future::plan()
see_future()
see_future <- eval(future::plan())
see_future()
future::plan()
future::plan()
?future::plan()
?on.exit
