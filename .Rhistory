plot(x, y, col=col, pch=ol)
col = ifelse(pred > quantile(pred, 0.90), "red", "blue")
plot(x, y, col=col, pch=ol)
col = ifelse(pred > quantile(pred, 0.80), "red", "blue")
plot(x, y, col=col, pch=ol)
col = ifelse(pred > quantile(pred, 0.75), "red", "blue")
plot(x, y, col=col, pch=ol)
col = ifelse(pred > quantile(pred, 0.95), "red", "blue")
plot(x, y, col=col, pch=ol)
res <- isolationForest(data, n_trees = 10000, extension_level = 1, Phi = 64)
pred <- predict.isolationForest(res, data)
plot(x, y, col=col, pch=ol)
col = ifelse(pred > quantile(pred, 0.95), "red", "blue")
plot(x, y, col=col, pch=ol)
?crossprod
crossprod(1:10)
crossprod(1:10,1:10)
crossprod(1:10,10:20)
crossprod(1:10,1:2)
crossprod(1:10,1:10)
crossprod(1:10)
crossprod(1:10,0:9)
crossprod(1:10,11:20)
?duplicated()
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
see <- isolationForest(data, 100, 10)
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
see <- isolationForest(data, 100, 10)
View(see)
see[["forest"]][[1]][[2]]
see[["forest"]][[1]][[1]]
res <- predict.isolationForest(see, data)
res
quantile(res) > 0.95
quantile(res)
res[ quantile(res) > 0.95 ]
quantile(res) > 0.95
quantile(res,095)
quantile(res,0.95)
res > quantile(res,0.95)
ifelse( res > quantile(res,0.95), "red", "blue")
col <- ifelse( res > quantile(res,0.95), "red", "blue"); plot(x,y, col, pch = ol)
col <- ifelse( res > quantile(res,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
col <- ifelse( res > quantile(res,0.9), "red", "blue"); plot(x,y, col = col, pch = ol)
see <- isolationForest(data, 100, Phi = 32)
res <- predict.isolationForest(see, data)
col <- ifelse( res > quantile(res,0.9), "red", "blue"); plot(x,y, col = col, pch = ol)
see <- isolationForest(data, 100, Phi = 32, extension_level = 1)
res <- predict.isolationForest(see, data)
col <- ifelse( res > quantile(res,0.9), "red", "blue"); plot(x,y, col = col, pch = ol)
see <- isolationForest(data, 10000, Phi = 32, extension_level = 1)
future::plan("multiprocess")
future::plan()
see <- isolationForest(data, 10000, Phi = 32, extension_level = 1)
res <- predict.isolationForest(see, data)
col <- ifelse( res > quantile(res,0.9), "red", "blue"); plot(x,y, col = col, pch = ol)
col <- ifelse( res > quantile(res,0.9), "red", "blue"); plot(x,y, col = col, pch = ol)
col <- ifelse( res > quantile(res,0.9), "red", "blue"); plot(x,y, col = col, pch = ol)
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
see <- isolationForest(data, 10000, Phi = 32, extension_level = 1)
res <- predict.isolationForest(see, data)
col <- ifelse( res > quantile(res,0.9), "red", "blue"); plot(x,y, col = col, pch = ol)
col <- ifelse( res > quantile(res,0.85), "red", "blue"); plot(x,y, col = col, pch = ol)
col <- ifelse( res > quantile(res,0.80), "red", "blue"); plot(x,y, col = col, pch = ol)
see_vanilla <- isolationForest(data, 10000, Phi = 32, extension_level = 1, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
see_vanilla <- isolationForest(data, 10000, Phi = 32, extension_level = 1, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
see_vanilla <- isolationForest(data, 10000, Phi = 32, extension_level = 1, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
see_vanilla <- isolationForest(data, 10000, Phi = 32, extension_level = 1, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
see_vanilla <- isolationForest(data, 10000, Phi = 32, extension_level = 1, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
see_vanilla <- isolationForest(data, 10000, Phi = 32, extension_level = 1, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
see_vanilla <- isolationForest(data, 10000, Phi = 32, extension_level = 1, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
see_vanilla <- isolationForest(data, 10000, Phi = 32, extension_level = 1, vanilla = TRUE)
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
see_vanilla <- isolationForest(data, 10000, Phi = 32, extension_level = 1, vanilla = TRUE)
View(see_vanilla)
see_vanilla[["forest"]][[1]][[2]]
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
res <- predict.isolationForest(see, data)
res_vanilla <- predict.isolationForest(see_vanilla, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
res_vanilla <- predict.isolationForest(see_vanilla, data)
View(see_vanilla)
see_vanilla[["forest"]][[1]][[2]]
see_vanilla[["forest"]][[1]][[2]][,2]
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
res_vanilla <- predict.isolationForest(see_vanilla, data)
col <- ifelse( res_vanilla > quantile(res_vanilla,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
col <- ifelse( res > quantile(res,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
col <- ifelse( res_vanilla > quantile(res_vanilla,0.9), "red", "blue"); plot(x,y, col = col, pch = ol)
col <- ifelse( res > quantile(res,0.9), "red", "blue"); plot(x,y, col = col, pch = ol)
col <- ifelse( res > quantile(res,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
col <- ifelse( res_vanilla > quantile(res_vanilla,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
col <- ifelse( res > quantile(res,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
col <- ifelse( res_vanilla > quantile(res_vanilla,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
see_small <- isolationForest(data, 100, Phi = 32, extension_level = 1)
res_small <- predict.isolationForest(see_small, data)
col <- ifelse( res_small > quantile(res_small,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
see_small <- isolationForest(data, 100, Phi = 32, extension_level = 1, vanilla = TRUE)
res_small <- predict.isolationForest(see_small, data)
col <- ifelse( res_small > quantile(res_small,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
time_isofor <- function(vanilla = TRUE){
start <- Sys.time()
res <- isolationForest(data, 2000, Phi = 256, extension_level = 1, vanilla)
predict.isolationForest(res, data)
end <- Sys.time()
print(end - start)
return()
}
time_isofor()
time_isofor(FALSE)
res <- isolationForest(data, 2000, Phi = 256, extension_level = 1, vanilla = FALSE)
predict.isolationForest(res, data)
time_isofor(FALSE)
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
time_isofor(FALSE)
start <- Sys.time();res <- isolationForest(data, 2000, Phi = 256, extension_level = 1, vanilla = FALSE)
predict.isolationForest(res, data);end <-  Sys.time(); end - start
start <- Sys.time();res <- isolationForest(data, 2000, Phi = 256, extension_level = 1, vanilla = FALSE)
predict.isolationForest(res, data);end <-  Sys.time(); end - start
start <- Sys.time();res <- isolationForest(data, 2000, Phi = 32, extension_level = 1, vanilla = FALSE)
predict.isolationForest(res, data);end <-  Sys.time(); end - start
start <- Sys.time();res <- isolationForest(data, 2000, Phi = 32, extension_level = 0, vanilla = FALSE)
predict.isolationForest(res, data);end <-  Sys.time(); end - start
col <- ifelse( res > quantile(res,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
start <- Sys.time();res <- isolationForest(data, 2000, Phi = 32, extension_level = 0, vanilla = FALSE)
ploti <- predict.isolationForest(res, data);end <-  Sys.time(); end - start
col <- ifelse( ploti > quantile(ploti,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
start <- Sys.time();res <- isolationForest(data, 2000, Phi = 32, extension_level = 0, vanilla = FALSE, seed = 10)
ploti <- predict.isolationForest(res, data);end <-  Sys.time(); end - start
col <- ifelse( ploti > quantile(ploti,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
start <- Sys.time();res <- isolationForest(data, 2000, Phi = 32, extension_level = 0, vanilla = FALSE, seed = 100)
ploti <- predict.isolationForest(res, data);end <-  Sys.time(); end - start
col <- ifelse( ploti > quantile(ploti,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
start <- Sys.time();res <- isolationForest(data, 2000, Phi = 32, extension_level = 0, vanilla = FALSE, seed = 100)
ploti <- predict.isolationForest(res, data);end <-  Sys.time(); end - start
col <- ifelse( ploti > quantile(ploti,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
?future.apply::future_lapply()
source('C:/Users/juraj/git_hub/IsolationForest/R/add_vanilla.R')
start <- Sys.time();res <- isolationForest(data, 2000, Phi = 32, extension_level = 0, vanilla = FALSE, seed = 100)
ploti <- predict.isolationForest(res, data);end <-  Sys.time(); end - start
col <- ifelse( ploti > quantile(ploti,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
start <- Sys.time();res <- isolationForest(data, 2000, Phi = 32, extension_level = 0, vanilla = FALSE, seed = 100)
ploti <- predict.isolationForest(res, data);end <-  Sys.time(); end - start
col <- ifelse( ploti > quantile(ploti,0.95), "red", "blue"); plot(x,y, col = col, pch = ol)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x,y,ploti)
transform(expand.grid(x,y), ploti)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x,y,ploti)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x,y,ploti)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x,y,ploti)
anomaly_plot(y,x,ploti)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(y,x,ploti)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(y,x,ploti)
?stat_density_2d()
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(y,x,ploti)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(y,x,ploti)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(y,x,ploti)
?geom_tile
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(y,x,ploti)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(y,x,ploti)
names(x)
colnames(data)
grep(pattern = x, colnames(data))
grep(pattern = "x", colnames(data))
grep(pattern = "y", colnames(data))
?seq()
is.integer(5)
is.integer(5.0)
is.integer(5)
is.integer(c(5))
is.numeric(c(5))
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, res)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
see <- anomaly_plot(x = "x" , y = "y", data, res)
View(see)
see <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
View(see)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
source('C:/Users/juraj/Desktop/anomaly_plot.R')
see <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(see)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
expand.grid(1:100,1:100)
expand.grid(1:sqrt(1050), 1:sqrt(1050))
expand.grid(1:ceiling(sqrt(1050)), 1:sqrt(1050))
expand.grid(1:ceiling(sqrt(1050)), 1:floor(sqrt(1050)))
expand.grid(1:ceiling(sqrt(1050)), 1:ceiling(sqrt(1050)))
expand.grid(1:floor(sqrt(1050)), 1:floor(sqrt(1050)))
expand.grid(1:floor(sqrt(1050)+2), 1:floor(sqrt(1050)))
expand.grid(1:floor(sqrt(1050)+1), 1:floor(sqrt(1050)))
data("volcano")
volcano
View(volcano)
contour(volcano)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
RColorBrewer::brewer.pal(5,"something")
RColorBrewer::brewer.pal(5,"Set1")
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
?scale_shape_manual()
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla, discrete = FALSE)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla, discrete = FALSE)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla, discrete = FALSE)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla, discrete = FALSE)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla, discrete = FALSE)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla, discrete = FALSE)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla, discrete = FALSE)
plot(viewable)
source('C:/Users/juraj/Desktop/anomaly_plot.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla, discrete = FALSE)
plot(viewable)
source('C:/Users/juraj/git_hub/IsolationForest/R/predict.R')
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla, discrete = FALSE)
library(ggplot2)
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla, discrete = FALSE)
viewable <- anomaly_plot(x = "x" , y = "y", data, see_vanilla, discrete = TRUE)
plot(viewable)
source('C:/Users/juraj/git_hub/IsolationForest/R/anomaly_plot.R')
anomaly_plot(x = "x" , y = "y", data, see_vanilla, discrete = TRUE)
recovery::recover(anomaly_plot, list(x = "x" , y = "y", data, see_vanilla, discrete = TRUE), FALSE)
recovery::recover(anomaly_plot, list(x = "x" , y = "y", data = data, forest = see_vanilla), FALSE)
anomaly_plot(x = "x" , y = "y", data = data, forest = see_vanilla)
reshape2::melt(volcano)
?ggplot2::stat()
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, see_vanilla)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, see_vanilla)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, see_vanilla)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, see_vanilla, data)
expand.grid(x,y)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, see_vanilla, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, see_vanilla, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, see_vanilla, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
gc()
anomaly_contour(x,y, see_vanilla, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
gc()
anomaly_contour(x,y, see_vanilla, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
gc()
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, see_vanilla, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
gc()
anomaly_contour(x,y, see_vanilla, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
gc()
anomaly_contour(x,y, see_vanilla, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, see_vanilla, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, see_vanilla, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, see_vanilla, data)
anomaly_contour(x,y, res, data)
anomaly_contour(x,y, what, data)
extended_0 <- isolationForest(data n_trees = 2000, Phi = 32, extension_level = 0)
extended_0 <- isolationForest(data, n_trees = 2000, Phi = 32, extension_level = 0)
future::plan("multiprocess")
extended_1 <- isolationForest(data, n_trees = 2000, Phi = 32, extension_level = 1)
extended_1 <- isolationForest(data, n_trees = 2000, Phi = 32, extension_level = 1, vanilla = TRUE)
extended_1 <- isolationForest(data, n_trees = 2000, Phi = 32, extension_level = 1)
extended_not <- isolationForest(data, n_trees = 2000, Phi = 32, extension_level = 1)
extended_not <- isolationForest(data, n_trees = 2000, Phi = 32, extension_level = 1, vanilla = TRUE)
anomaly_contour(x,y, extended_0, data)
anomaly_contour(x,y, extended_1, data)
anomaly_contour(x,y, extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_not, data)
anomaly_contour(x,y, extended_1, data)
anomaly_contour(x,y, extended_0, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_0, data)
anomaly_contour(x,y, extended_1, data)
anomaly_contour(x,y, extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_not, data)
anomaly_contour(x,y, extended_1, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_1, data)
anomaly_contour(x,y, extended_not, data)
anomaly_contour(x,y, extended_0, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_0, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_0, data)
?stat_contour()
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_0, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_0, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_0, data)
anomaly_contour(x,y, extended_1, data)
anomaly_contour(x,y, extended_not, data)
anomaly_contour(x,y, extended_1, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_1, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_1, data)
anomaly_contour(x,y, extended_not, data)
anomaly_contour(x,y, extended_0, data)
extended_0 <- isolationForest(data, n_trees = 10000, Phi = 32, extension_level = 0)
extended_1 <- isolationForest(data, n_trees = 10000, Phi = 32, extension_level = 1)
gc()
anomaly_contour(x,y, extended_1, data)
anomaly_contour(x,y, extended_0, data)
anomaly_contour(x,y, extended_not, data)
gc()
future::plan("sequential")
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_not, data)
ggthemes::colorblind_pal()
ggthemes::colorblind_pal(4)
ggthemes::colorblind_pal(n = 8)
?ggthemes::colorblind_pal()
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_not, data)
anomaly_contour(x,y, extended_0, data)
anomaly_contour(x,y, extended_1, data)
grep(x, colnames(data))
grep(as.character(x), colnames(data))
merge(x,y, colMeans(data))
cbind(x,y, colMeans(data))
colMeans(data)
data.frame(colMeans(data))
data.frame(colMeans(data)[1], colMeans(data)[2])
cbind(x,y, data.frame(colMeans(data)[1], colMeans(data)[2]))
names(x)
names(data)
as.data.frame.vector(colMeans(data))
as.data.frame.vector(t(colMeans(data)))
as.data.frame(t(colMeans(data)))
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x,y, extended_not, data)
anomaly_contour("x","y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour("x","y", extended_not, data)
anomaly_contour(x = "x",y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x",y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x",y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x",y = "y", extended_not, data)
grep(pattern = "x", data)
grep(pattern = "x", colnames(data))
grep(pattern = "y", colnames(data))
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x",y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x",y = "y", extended_not, data)
anomaly_contour(x = 1,y = 2, extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = 1,y = 2, extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = 1,y = 2, extended_not, data)
anomaly_contour(x = "x", y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x", y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x", y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x", y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x", y = "y", extended_not, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/contour_plot.R')
anomaly_contour(x = "x", y = "y", extended_not, data)
anomaly_contour(x = "x", y = "y", extended_0, data)
anomaly_contour(x = "x", y = "y", extended_1, data)
source('C:/Users/juraj/git_hub/IsolationForest/R/anomaly_plot.R')
anomaly_plot(x = "x", y = "y", extended_1, data)
anomaly_plot(x = "x", y = "y", forest = extended_1, data = data)
anomaly_plot(x = "x", y = "y", forest = extended_1, data = data, contamination = 0.1)
